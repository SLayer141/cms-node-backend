// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   
  password  String
  name      String?
  userName  String   
  isActive  Boolean  @default(false)
  status    Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Role     @default(STUDENT)
  
  // Self-referencing relations for audit
  createdBy     Int?
  createdByUser User? @relation("UserCreatedBy", fields: [createdBy], references: [id])
  updatedBy     Int?
  updatedByUser User? @relation("UserUpdatedBy", fields: [updatedBy], references: [id])
  
  // Relations
  projects Project[]
  
  // Reverse relations for audit
  usersCreated User[] @relation("UserCreatedBy")
  usersUpdated User[] @relation("UserUpdatedBy")
  
  projectsCreated Project[] @relation("ProjectCreatedBy")
  projectsUpdated Project[] @relation("ProjectUpdatedBy")

  @@map("users")
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}

model Project {
  id        Int      @id @default(autoincrement())
  title     String
  link      String?
  
  // User relation with cascade delete
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  
  // Audit fields with proper relations
  createdBy     Int?
  createdByUser User? @relation("ProjectCreatedBy", fields: [createdBy], references: [id])
  updatedBy     Int?
  updatedByUser User? @relation("ProjectUpdatedBy", fields: [updatedBy], references: [id])
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}
